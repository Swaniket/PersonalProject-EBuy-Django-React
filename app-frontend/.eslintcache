[{"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\index.js":"1","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\App.js":"2","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\Routes.js":"3","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Home.js":"4","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\coreapicalls.js":"5","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\backend.js":"6","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Base.js":"7","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Card.js":"8","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\ImageHelper.js":"9","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\cartHelper.js":"10","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\auth\\helper\\PrivateRoutes.js":"11","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\auth\\helper\\index.js":"12","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\user\\Signup.js":"13","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\UserDashboard.js":"14","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\user\\Signin.js":"15","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Menu.js":"16","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Cart.js":"17","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\PaymentB.js":"18","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\paymentHelper.js":"19","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\orderHelper.js":"20"},{"size":176,"mtime":1607837570187,"results":"21","hashOfConfig":"22"},{"size":129,"mtime":1607837352990,"results":"23","hashOfConfig":"22"},{"size":870,"mtime":1608784399973,"results":"24","hashOfConfig":"22"},{"size":1232,"mtime":1608143271006,"results":"25","hashOfConfig":"22"},{"size":259,"mtime":1607874322495,"results":"26","hashOfConfig":"22"},{"size":50,"mtime":1607703050655,"results":"27","hashOfConfig":"22"},{"size":1297,"mtime":1608533872568,"results":"28","hashOfConfig":"22"},{"size":2586,"mtime":1608974292105,"results":"29","hashOfConfig":"22"},{"size":525,"mtime":1608210394243,"results":"30","hashOfConfig":"22"},{"size":1618,"mtime":1608130928058,"results":"31","hashOfConfig":"22"},{"size":592,"mtime":1608450533090,"results":"32","hashOfConfig":"22"},{"size":2056,"mtime":1608480276093,"results":"33","hashOfConfig":"22"},{"size":5020,"mtime":1608448496211,"results":"34","hashOfConfig":"22"},{"size":296,"mtime":1608450297658,"results":"35","hashOfConfig":"22"},{"size":4474,"mtime":1608611023961,"results":"36","hashOfConfig":"22"},{"size":6209,"mtime":1608612689270,"results":"37","hashOfConfig":"22"},{"size":1657,"mtime":1608973933979,"results":"38","hashOfConfig":"22"},{"size":4946,"mtime":1609127023985,"results":"39","hashOfConfig":"22"},{"size":713,"mtime":1608954731271,"results":"40","hashOfConfig":"22"},{"size":502,"mtime":1608873446835,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"26i6vi",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\index.js",[],["91","92"],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\App.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\Routes.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Home.js",["93"],"import React, {useState, useEffect} from 'react'\r\nimport getProducts from './helper/coreapicalls'\r\nimport Base from './Base'\r\nimport Card from \"./Card\"\r\nimport '../styles.css'\r\n\r\nexport default function Home() {\r\n    const [products, setProducts] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadAllProducts = () => {\r\n        getProducts()\r\n        // data?.error\r\n        .then(data => {\r\n            if (data && data.error) {\r\n                setError(data.error)\r\n                console.log(error);\r\n            } else {\r\n                console.log(data)\r\n                setProducts(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [])\r\n\r\n    return(\r\n        <Base title = \"Home Page\" description = \"Welcome to the store\">\r\n            <h1>This is the Home component</h1>\r\n            <div className=\"row\">\r\n                {products.map((product, index) => {\r\n                    return(\r\n                        <div key = {index} className = \"col-sm mb-2\">\r\n                            <Card product = {product}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\n","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\coreapicalls.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\backend.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Base.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Card.js",["94","95"],"import React, {useState} from 'react'\r\nimport ImageHelper from './helper/ImageHelper'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport {addItemToCart, removeItemFromCart} from './helper/cartHelper'\r\nimport {isAuthenticated} from '../auth/helper/index'\r\nimport './styles/Card.css'\r\n\r\n// function(f) {return f} \r\nconst Card = ({product, addtoCart = true, removeFromCart = false, reload = undefined, setReload = f => f}) => {\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n\r\n    const cartTitle = product ? product.name : \"A photo from pixels\"\r\n    const cartDescription = product? product.description : \"Default Description\"\r\n    const cartPrice = product? product.price : \"Default\"\r\n\r\n\r\n    const addToCart = () => {\r\n      if (isAuthenticated()){\r\n        addItemToCart(product, () => setRedirect(true))\r\n        console.log(\"Added to cart\");\r\n      }\r\n      else{\r\n        console.log(\"Log in first\");\r\n      }\r\n    }\r\n\r\n    // Deal with this later\r\n    const getAredirect = redirect => {\r\n      if(redirect){\r\n        return <Redirect to= '/cart'/>\r\n      }\r\n    }\r\n\r\n    const showAddToCart = addToCart => {\r\n      return(\r\n        addtoCart && \r\n        ( \r\n          <button\r\n            onClick={addToCart}\r\n            className=\"btn btn-sm btn-primary mt-2 mb-2\"\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        )\r\n      )\r\n    }\r\n\r\n    const showRemoveFromCart = (removeFromCart) => {\r\n      return(\r\n        removeFromCart && (\r\n          <button\r\n                onClick={() => {\r\n                  removeItemFromCart(product.id)\r\n                  setReload(!reload)\r\n                  console.log(\"Product removed from cart\")\r\n                }}\r\n                className=\"btn  btn-block btn-outline-danger mt-2 mb-2\"\r\n              >\r\n                Remove from cart\r\n          </button>\r\n        )\r\n      )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"card mt-2 mb-2 text-dark\">\r\n        <ImageHelper product = {product}/>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-title\">\r\n            {cartTitle}\r\n          </p>\r\n          <p className=\"card-title\">\r\n            {cartDescription}\r\n          </p>\r\n          <p className=\"badge rounded-pill bg-primary mb-2\">$ {cartPrice}</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {showAddToCart(addToCart)}\r\n            </div>\r\n            <div className=\"col-12\">\r\n              {showRemoveFromCart(removeFromCart)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Card\r\n","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\ImageHelper.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\cartHelper.js",["96"],"export const addItemToCart = (item, next) => {\r\n    let cart = []\r\n    // Firstly check if there are any data in browser local storage or not\r\n    if (typeof windows !== undefined) {\r\n        // If any information already exist in cart then add it in the cart\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        cart.push({\r\n            ...item \r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        // it's for chainnning other call back functions\r\n        next()\r\n    }\r\n}\r\n\r\nexport const loadCart = () => {\r\n    if (typeof windows !== undefined) {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            return JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeItemFromCart = (productId) => {\r\n    let cart = []\r\n\r\n    if (typeof windows !== undefined) {\r\n\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product.id === productId){\r\n                cart.splice(i,1)\r\n            }\r\n        })\r\n\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n    }\r\n\r\n    return cart \r\n}\r\n\r\nexport const cartEmpty = (next) => {\r\n    if (typeof windows !== undefined) {\r\n        // If we are gonna delete the whole cart then it will throw error in some other methods where a cart object needs to be there\r\n        localStorage.removeItem(\"cart\")\r\n\r\n        let cart = []\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        next()\r\n    }\r\n}","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\auth\\helper\\PrivateRoutes.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\auth\\helper\\index.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\user\\Signup.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\UserDashboard.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\user\\Signin.js",["97","98","99","100"],"import React, {useState} from 'react'\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport Base from '../core/Base'\r\nimport {signin, authenticate, isAuthenticated} from '../auth/helper/index'\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        loading: false,\r\n        didRedirect: false\r\n\r\n    })\r\n\r\n    const {name, email, password, error, success, loading, didRedirect} = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({...values, error: false, [name]: event.target.value})\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        // Updating the state\r\n        setValues({...values, error: false, loading: true})\r\n        // Signing in the user\r\n        signin({email, password})\r\n        .then(data => {\r\n            console.log(\"Data:\", data)\r\n            if (data.token) {\r\n                // let sessionToken  = data.token\r\n                authenticate(data, () => {\r\n                    console.log(\"TOKEN ADDED\");\r\n                    setValues({\r\n                        ...values,\r\n                        didRedirect: true,\r\n                        error: \"\",\r\n                        success: true\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                setValues({\r\n                    ...values, \r\n                    loading: false,\r\n                    error: true, \r\n                    success: false\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch((e) => console.log(e))\r\n\r\n    }\r\n\r\n    const performRedirect = () => {\r\n        if (isAuthenticated()) {\r\n            return <Redirect to = \"/\"/>\r\n        }\r\n    }\r\n\r\n    const loadingMessage = () => {\r\n        return(\r\n            loading && (\r\n                <div className = \"alert alert-info\">\r\n                    <h2>Loading...</h2>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    const errorMessage = () => {\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <div className = \"alert alert-danger\" style = {{display: error ? \"\" : \"none\"}}>\r\n                        Check all fields again\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const signInForm = () => {\r\n        return(\r\n            <div className=\"row align-items-center justify-content-center min-vh-100\">\r\n                <div className=\"col-md-6 col-lg-4 col-xl-4 py-6 py-md-0 signup\">\r\n                    <div className = \"mb-2 mt-4 text-center\">\r\n                        <h6 className = \"h3 mb-1\">SIGN IN</h6>\r\n                        <p className = \"text-muted mb-0\">Please Sign In to continue</p>\r\n                    </div>\r\n                    <form> \r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                placeholder = \"Please enter your email\"\r\n                                type=\"text\" \r\n                                className = \"form-control\" \r\n                                value = {email} \r\n                                onChange = {handleChange(\"email\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                placeholder = \"Choose a password\"\r\n                                type=\"password\" \r\n                                className = \"form-control\" \r\n                                value = {password} \r\n                                onChange = {handleChange(\"password\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className = \"w-100 btn btn-lg btn-primary mb-4\" onClick = {handleSubmit}>\r\n                            Submit\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Base title = \"Welcome to Sign in page\">\r\n            {errorMessage()}\r\n            {loadingMessage()}\r\n            \r\n            {signInForm()}\r\n            <p className = \"text-center\">\r\n                {JSON.stringify(values)}\r\n            </p>\r\n\r\n            {performRedirect()}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Menu.js",["101"],"import React, {Fragment} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport './styles/Menu.css'\r\nimport {signout, isAuthenticated} from \"../auth/helper/index\"\r\n\r\n\r\nconst currentTab = (history, path) => {\r\n    if(history.location.pathname === path){\r\n        return {color: \"#2ecc72\"}\r\n    } else {\r\n        return {color: \"#000000\"}\r\n    }\r\n}\r\n\r\n// History can only be used with withRouter\r\nconst Menu = ({history, path}) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className = \"container-fluid\">\r\n\r\n                {/* Brand Name & Logo */}\r\n                <Link style = {currentTab(history, \"/\")} className = \"navbar-brand mx-auto d-none d-lg-block\" to = \"/\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" className=\"bi bi-eyeglasses\" viewBox=\"0 0 16 16\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 6a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm2.625.547a3 3 0 0 0-5.584.953H.5a.5.5 0 0 0 0 1h.541A3 3 0 0 0 7 8a1 1 0 0 1 2 0 3 3 0 0 0 5.959.5h.541a.5.5 0 0 0 0-1h-.541a3 3 0 0 0-5.584-.953A1.993 1.993 0 0 0 8 6c-.532 0-1.016.208-1.375.547zM14 8a2 2 0 1 0-4 0 2 2 0 0 0 4 0z\"/>\r\n                    </svg>\r\n                    Ebuy\r\n                </Link>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\"></ul>\r\n\r\n                    <ul className=\"navbar-nav\">\r\n                            {/* Profile Items */}\r\n                            <li className = \"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" className=\"bi bi-people\" viewBox=\"0 0 16 16\">\r\n                                        <path fillRule=\"evenodd\" d=\"M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8zm-7.978-1h7.956a.274.274 0 0 0 .014-.002l.008-.002c-.002-.264-.167-1.03-.76-1.72C13.688 10.629 12.718 10 11 10c-1.717 0-2.687.63-3.24 1.276-.593.69-.759 1.457-.76 1.72a1.05 1.05 0 0 0 .022.004zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0zM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816zM4.92 10c-1.668.02-2.615.64-3.16 1.276C1.163 11.97 1 12.739 1 13h3c0-1.045.323-2.086.92-3zM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4z\"/>\r\n                                    </svg>\r\n                                </a>\r\n\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    {isAuthenticated() && (\r\n                                        <li className=\"nav-item\">\r\n                                            <Link style = {currentTab(history, \"/user/dashboard\")}className = \"nav-link\" to = \"/user/dashboard\">Dashboard</Link>\r\n                                        </li>\r\n                                    )}\r\n\r\n                                    {!isAuthenticated() && (\r\n                                        <Fragment>\r\n                                            <li className=\"nav-item\">\r\n                                                <Link style = {currentTab(history, \"/signup\")}className = \"nav-link\" to = \"/signup\">Signup</Link>\r\n                                            </li>\r\n\r\n                                            <li className=\"nav-item\">\r\n                                                <Link style = {currentTab(history, \"/signin\")}className = \"nav-link\" to = \"/signin\">\r\n                                                    Signin\r\n                                                </Link>\r\n                                            </li>\r\n                                        </Fragment>\r\n                                    )}\r\n\r\n\r\n                                    \r\n                                    {isAuthenticated() && (\r\n                                        <li className=\"nav-item d-flex\">\r\n                                        <span className = \"nav-link text-warning\" onClick = {() => {\r\n                                            signout(() => {\r\n                                                history.push(\"/signin\")\r\n                                            })\r\n                                        }}>Signout</span>\r\n                                        </li>\r\n                                    )}\r\n                                    \r\n\r\n                                </ul>                                \r\n                            </li>\r\n                            {/* Cart */}\r\n                            <li className=\"nav-item\">\r\n                                <Link style = {currentTab(history, \"/cart\")}className = \"nav-link\" to = \"/cart\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"24\" fill=\"currentColor\" className=\"bi bi-cart3\" viewBox=\"0 0 16 16\">\r\n                                        <path fillRule=\"evenodd\" d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm7 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\r\n                                    </svg>\r\n                                </Link>\r\n                            </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n       \r\n    )\r\n}\r\n\r\nexport default withRouter(Menu)\r\n",["102","103"],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\Cart.js",["104"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport Base from './Base'\r\nimport Card from './Card'\r\nimport { loadCart } from './helper/cartHelper'\r\nimport PaymentB from './PaymentB'\r\n\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const [reload, setReload] = useState(false)\r\n    const [products, setProducts] = useState([])\r\n\r\n    useEffect(() => {\r\n        setProducts(loadCart())\r\n    }, [reload])\r\n\r\n    const loadAllProducts = (products) => {\r\n        return(\r\n            <div>\r\n                {products.map((product, index) => (\r\n                    <Card \r\n                    key = {index} \r\n                    product = {product} \r\n                    removeFromCart = {true} \r\n                    addtoCart = {false} \r\n                    reload = {reload} \r\n                    setReload = {setReload}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const loadCheckout = () => {\r\n        return(\r\n            <div>\r\n                <h1>checkout</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title = \"Cart page\" description = \"Welcome to checkout\">\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-6\">{loadAllProducts(products)}</div>\r\n                <div className=\"col-6\">{products.length > 0 ? \r\n                    (\r\n                        <PaymentB products = {products} setReload = {setReload} />\r\n                    ) : \r\n                    (\r\n                        <h3>Please log in or add something in cart</h3>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\PaymentB.js",["105","106","107","108","109","110"],"import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\n\r\nimport { cartEmpty } from './helper/cartHelper'\r\nimport { getToken, processPayment } from './helper/paymentHelper'\r\nimport { createOrder } from './helper/orderHelper'\r\nimport { isAuthenticated, signout } from '../auth/helper/index'\r\n\r\nconst PaymentB = ({products, reload = undefined, setReload = (f) => f }) => {\r\n\r\n    const[info, setInfo] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: \"\",\r\n        instance: {}\r\n    })\r\n\r\n    const userId = isAuthenticated && isAuthenticated().user.id\r\n    const token = isAuthenticated && isAuthenticated().token\r\n\r\n    const getMeToken = (userId, token) => {\r\n        getToken(userId, token)\r\n        .then(info => {\r\n            if (info.error) {\r\n                setInfo({\r\n                    ...info, \r\n                    error: info.error\r\n                })\r\n                signout(() => {\r\n                    return <Redirect to =\"/\"/>\r\n                })\r\n            }\r\n            else {\r\n                const clientToken = info.clientToken\r\n                setInfo({clientToken: clientToken})\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMeToken(userId, token)\r\n    }, [])\r\n\r\n    const getAmount = () => {\r\n        let amount = 0\r\n        products.map((product) => {\r\n            amount = amount + parseInt(product.price)\r\n        })\r\n        return amount\r\n    }\r\n\r\n    const onPurchase = () => {\r\n        setInfo({loading: true})\r\n        let nonce\r\n        let getNonce = info.instance.requestPaymentMethod()\r\n        .then(data => {\r\n            nonce = data.nonce\r\n            const paymentData = {\r\n                paymentMethodNonce: nonce,\r\n                amount: getAmount()\r\n            }\r\n            processPayment(userId, token, paymentData)\r\n            .then(response => {\r\n                if (response.error) {\r\n                    if (response.code == '1' ) {\r\n                        console.log(\"PAYMENT FAILED\");\r\n                        signout(() => {\r\n                            return <Redirect to = '/'/>\r\n                        })\r\n                    }\r\n                } \r\n                else {\r\n                    setInfo({\r\n                        ...info,\r\n                        success: response.success,\r\n                        loading: false,\r\n                    })\r\n                    console.log(\"PAYMENT SUCCESS\")\r\n\r\n                    let product_names = \"\"\r\n                    products.forEach(function(item){\r\n                        product_names += item.name + \", \"\r\n                    })\r\n\r\n                    const orderData = {\r\n                        products: product_names,\r\n                        transaction_id: response.transaction.id,\r\n                        amount: response.transaction.amount\r\n                    }\r\n                    createOrder(userId, token, orderData)\r\n                    .then(response => {\r\n                        if(response.error) {\r\n                            if(response.code == \"1\"){\r\n                                console.log(\"ORDER FAILED\");\r\n                            }\r\n                            signout(() => {\r\n                                return <Redirect to = \"/\" />\r\n                            })        \r\n                        }\r\n                        else {\r\n                            if (response.success == true) {\r\n                                console.log(\"ORDER PLACED\");\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        setInfo({loading: false, success: false})\r\n                        console.log(\"ORDER FAILED\", error)\r\n                    })\r\n                    cartEmpty(() => {\r\n                        console.log(\"CART IS EMPTIED OUT\");\r\n                    })\r\n                    setReload(!reload)\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n        })\r\n        .catch(e => console.log(\"NONCE ERROR:\", e))\r\n    }\r\n\r\n    const showDropIn = () => {\r\n        return(\r\n            <div>\r\n                {\r\n                    info.clientToken !== null && products.length > 0 ? \r\n                    (<div>\r\n                        <DropIn options = {{authorization: info.clientToken}} onInstance = {instance => (info.instance = instance)} />\r\n                        <button onClick = {onPurchase} className = \"btn btn-block btn-success\">Buy Now</button>\r\n                    </div>) : \r\n                    (<h3>Please login or Add something into the cart</h3>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Your bill is {getAmount()}</h3>\r\n            {showDropIn()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentB","D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\paymentHelper.js",[],"D:\\Personal Project\\E-Commerce\\app-frontend\\src\\core\\helper\\orderHelper.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":27,"column":8,"nodeType":"117","endLine":27,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":11,"column":12,"nodeType":"121","messageId":"122","endLine":11,"endColumn":20},{"ruleId":"119","severity":1,"message":"123","line":30,"column":11,"nodeType":"121","messageId":"122","endLine":30,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":36,"column":31,"nodeType":"126","messageId":"127","endLine":36,"endColumn":33},{"ruleId":"119","severity":1,"message":"128","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"129","line":18,"column":12,"nodeType":"121","messageId":"122","endLine":18,"endColumn":16},{"ruleId":"119","severity":1,"message":"130","line":18,"column":42,"nodeType":"121","messageId":"122","endLine":18,"endColumn":49},{"ruleId":"119","severity":1,"message":"131","line":18,"column":60,"nodeType":"121","messageId":"122","endLine":18,"endColumn":71},{"ruleId":"132","severity":1,"message":"133","line":39,"column":33,"nodeType":"134","endLine":39,"endColumn":164},{"ruleId":"111","replacedBy":"135"},{"ruleId":"113","replacedBy":"136"},{"ruleId":"119","severity":1,"message":"137","line":36,"column":11,"nodeType":"121","messageId":"122","endLine":36,"endColumn":23},{"ruleId":"115","severity":1,"message":"138","line":44,"column":8,"nodeType":"117","endLine":44,"endColumn":10,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"125","line":48,"column":32,"nodeType":"126","messageId":"127","endLine":48,"endColumn":34},{"ruleId":"119","severity":1,"message":"140","line":57,"column":13,"nodeType":"121","messageId":"122","endLine":57,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":67,"column":39,"nodeType":"143","messageId":"144","endLine":67,"endColumn":41},{"ruleId":"141","severity":1,"message":"142","line":95,"column":46,"nodeType":"143","messageId":"144","endLine":95,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":103,"column":50,"nodeType":"143","messageId":"144","endLine":103,"endColumn":52},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'redirect' is assigned a value but never used.","Identifier","unusedVar","'getAredirect' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'name' is assigned a value but never used.","'success' is assigned a value but never used.","'didRedirect' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["145"],["146"],"'loadCheckout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["148"],"'getNonce' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [loadAllProducts]",{"range":"153","text":"154"},"Update the dependencies array to be: [token, userId]",{"range":"155","text":"156"},[720,722],"[loadAllProducts]",[1358,1360],"[token, userId]"]